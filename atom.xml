<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>水厂日志</title>
  
  
  <link href="https://blog.ch34k.xyz/atom.xml" rel="self"/>
  
  <link href="https://blog.ch34k.xyz/"/>
  <updated>2024-07-21T07:28:58.881Z</updated>
  <id>https://blog.ch34k.xyz/</id>
  
  <author>
    <name>MrThanlon</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>棋王</title>
    <link href="https://blog.ch34k.xyz/2024/07/21/%E6%A3%8B%E7%8E%8B/"/>
    <id>https://blog.ch34k.xyz/2024/07/21/%E6%A3%8B%E7%8E%8B/</id>
    <published>2024-07-21T07:18:28.000Z</published>
    <updated>2024-07-21T07:28:58.881Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;作者：阿城&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;第一章&quot;&gt;&lt;a href=&quot;#第一章&quot; class=&quot;headerlink&quot; title=&quot;第一章&quot;&gt;&lt;/a&gt;第一章&lt;/h1&gt;&lt;p&gt;车站是乱得不能再乱，成千上万的人都在说话。谁也不去注意那条临时挂起来的大红布标语。这标语大约挂了不少次，字纸都折得有些坏。喇叭里放着一首又一首的语录歌儿，唱得大家心更慌。&lt;/p&gt;
&lt;p&gt;我的几个朋友，都已被我送走插队，现在轮到我了，竟没有人来送。父母生前颇有些污点，运动一开始即被打翻死去。家具上都有机关的铝牌编号，于是统统收走，倒也名正言顺。我虽孤身一人，却算不得独子，不在留城政策之内。我野狼似的转悠一年多，终于还是决定要走。此去的地方按月有二十几元工资，我便很向往，争了要去，居然就批准了。因为所去之地与别国相邻，斗争之中除了阶级，尚有国际，出身孬一些，组织上不太放心。我争得这个信任和权利，欢喜是不用说的，更重要的是，每月二十几元，一个人如何用得完？只是没人来送，就有些不耐烦，于是先钻进车厢，想找个地方坐下，任凭站台上千万人话别。&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>把函数指针封装为闭包</title>
    <link href="https://blog.ch34k.xyz/2023/10/16/%E6%8A%8A%E5%87%BD%E6%95%B0%E6%8C%87%E9%92%88%E5%B0%81%E8%A3%85%E4%B8%BA%E9%97%AD%E5%8C%85/"/>
    <id>https://blog.ch34k.xyz/2023/10/16/%E6%8A%8A%E5%87%BD%E6%95%B0%E6%8C%87%E9%92%88%E5%B0%81%E8%A3%85%E4%B8%BA%E9%97%AD%E5%8C%85/</id>
    <published>2023-10-16T10:31:44.000Z</published>
    <updated>2023-10-16T10:40:51.330Z</updated>
    
    
      
      
        
        
    <summary type="html"></summary>
        
      
    
    
    
    <category term="C/C++" scheme="https://blog.ch34k.xyz/categories/C-C/"/>
    
    
    <category term="C++" scheme="https://blog.ch34k.xyz/tags/C/"/>
    
    <category term="C" scheme="https://blog.ch34k.xyz/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>remux的一些调整</title>
    <link href="https://blog.ch34k.xyz/2022/11/12/remux%E7%9A%84%E4%B8%80%E4%BA%9B%E8%B0%83%E6%95%B4/"/>
    <id>https://blog.ch34k.xyz/2022/11/12/remux%E7%9A%84%E4%B8%80%E4%BA%9B%E8%B0%83%E6%95%B4/</id>
    <published>2022-11-12T08:50:13.000Z</published>
    <updated>2022-11-12T09:36:46.985Z</updated>
    
    
    <summary type="html">&lt;p&gt;在&lt;a href=&quot;/2022/10/21/%E8%A6%81%E6%8A%8A%E5%89%8D%E7%AB%AF%E5%92%8C%E5%90%8E%E7%AB%AF%E5%86%99%E5%9C%A8%E5%90%8C%E4%B8%80%E4%B8%AA%E6%96%87%E4%BB%B6%E9%87%8C/&quot;&gt;上一篇文章&lt;/a&gt;中我描述了一个更强大的JavaScript全栈框架。好吧，我承认他在设计有很多失误，当然，为了避免以后再发生这样的事情我决定还是要先做足充分的调研和实践再开始进行设计，总之就放在那提醒自己了。在本文中，我会纠正之前的错误（主要是实现非常困难以及没有必要的部分），并重新规划设计remux框架。&lt;/p&gt;</summary>
    
    
    
    <category term="Web" scheme="https://blog.ch34k.xyz/categories/Web/"/>
    
    <category term="JavaScript" scheme="https://blog.ch34k.xyz/categories/Web/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://blog.ch34k.xyz/tags/JavaScript/"/>
    
    <category term="Web" scheme="https://blog.ch34k.xyz/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>要把前端和后端写在同一个文件里</title>
    <link href="https://blog.ch34k.xyz/2022/10/21/%E8%A6%81%E6%8A%8A%E5%89%8D%E7%AB%AF%E5%92%8C%E5%90%8E%E7%AB%AF%E5%86%99%E5%9C%A8%E5%90%8C%E4%B8%80%E4%B8%AA%E6%96%87%E4%BB%B6%E9%87%8C/"/>
    <id>https://blog.ch34k.xyz/2022/10/21/%E8%A6%81%E6%8A%8A%E5%89%8D%E7%AB%AF%E5%92%8C%E5%90%8E%E7%AB%AF%E5%86%99%E5%9C%A8%E5%90%8C%E4%B8%80%E4%B8%AA%E6%96%87%E4%BB%B6%E9%87%8C/</id>
    <published>2022-10-21T12:44:55.000Z</published>
    <updated>2022-10-21T14:42:37.542Z</updated>
    
    
    <summary type="html">&lt;p&gt;假如我们需要设计一个需要密码才能登录的页面，某些偷懒的大聪明可以很容易地写出这样的代码：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;login&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;password&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (password === &lt;span class=&quot;string&quot;&gt;&amp;#x27;fuck&amp;#x27;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;#x27;hello&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;#x27;wrong password&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&amp;#x27;login-button&amp;#x27;&lt;/span&gt;).addEventListener(&lt;span class=&quot;string&quot;&gt;&amp;#x27;click&amp;#x27;&lt;/span&gt;, &lt;span class=&quot;keyword&quot;&gt;async&lt;/span&gt; () =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; password = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementById(&lt;span class=&quot;string&quot;&gt;&amp;#x27;password&amp;#x27;&lt;/span&gt;).value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    alert(&lt;span class=&quot;keyword&quot;&gt;await&lt;/span&gt; login(password));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="Web" scheme="https://blog.ch34k.xyz/categories/Web/"/>
    
    <category term="JavaScript" scheme="https://blog.ch34k.xyz/categories/Web/JavaScript/"/>
    
    
    <category term="JavaScript" scheme="https://blog.ch34k.xyz/tags/JavaScript/"/>
    
    <category term="Web" scheme="https://blog.ch34k.xyz/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>原子操作与无锁队列</title>
    <link href="https://blog.ch34k.xyz/2022/02/26/%E5%8E%9F%E5%AD%90%E6%93%8D%E4%BD%9C%E4%B8%8E%E6%97%A0%E9%94%81%E9%98%9F%E5%88%97/"/>
    <id>https://blog.ch34k.xyz/2022/02/26/%E5%8E%9F%E5%AD%90%E6%93%8D%E4%BD%9C%E4%B8%8E%E6%97%A0%E9%94%81%E9%98%9F%E5%88%97/</id>
    <published>2022-02-26T14:18:23.000Z</published>
    <updated>2022-08-18T11:04:16.044Z</updated>
    
    
    <summary type="html">&lt;p&gt;关于无锁数据结构有很多介绍了，如果想获得开箱即用的方案可以直接找liblfds，不过考虑到liblfds常年没维护，所以很多时候还得自己写，这里记录一下如何用原子操作实现无锁队列。&lt;/p&gt;
&lt;h2 id=&quot;队列&quot;&gt;&lt;a href=&quot;#队列&quot; class=&quot;headerlink&quot; title=&quot;队列&quot;&gt;&lt;/a&gt;队列&lt;/h2&gt;&lt;h3 id=&quot;简单队列&quot;&gt;&lt;a href=&quot;#简单队列&quot; class=&quot;headerlink&quot; title=&quot;简单队列&quot;&gt;&lt;/a&gt;简单队列&lt;/h3&gt;&lt;p&gt;真的是很简单了，就是一个链表，我们使用结构体定义该链表的节点和链表本身&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;queue_node&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;queue_node&lt;/span&gt;* &lt;span class=&quot;title&quot;&gt;next&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;* data;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;queue&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;queue_node&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;dummy&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;queue_node&lt;/span&gt;* &lt;span class=&quot;title&quot;&gt;tail&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;init_queue&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(struct &lt;span class=&quot;built_in&quot;&gt;queue&lt;/span&gt;* &lt;span class=&quot;built_in&quot;&gt;queue&lt;/span&gt;)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;queue&lt;/span&gt;-&amp;gt;dummy.next = &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;queue&lt;/span&gt;-&amp;gt;tail = &amp;amp;&lt;span class=&quot;built_in&quot;&gt;queue&lt;/span&gt;-&amp;gt;dummy;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="并行与并发" scheme="https://blog.ch34k.xyz/categories/%E5%B9%B6%E8%A1%8C%E4%B8%8E%E5%B9%B6%E5%8F%91/"/>
    
    
    <category term="并行" scheme="https://blog.ch34k.xyz/tags/%E5%B9%B6%E8%A1%8C/"/>
    
    <category term="并发" scheme="https://blog.ch34k.xyz/tags/%E5%B9%B6%E5%8F%91/"/>
    
  </entry>
  
  <entry>
    <title>使用shader加速三维点源阵仿真</title>
    <link href="https://blog.ch34k.xyz/2022/01/17/%E4%BD%BF%E7%94%A8shader%E5%8A%A0%E9%80%9F%E4%B8%89%E7%BB%B4%E7%82%B9%E6%BA%90%E9%98%B5%E4%BB%BF%E7%9C%9F/"/>
    <id>https://blog.ch34k.xyz/2022/01/17/%E4%BD%BF%E7%94%A8shader%E5%8A%A0%E9%80%9F%E4%B8%89%E7%BB%B4%E7%82%B9%E6%BA%90%E9%98%B5%E4%BB%BF%E7%9C%9F/</id>
    <published>2022-01-17T12:29:33.000Z</published>
    <updated>2022-01-18T08:39:42.596Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://github.com/MrThanlon/array-field/&quot;&gt;项目地址&lt;/a&gt;/&lt;a href=&quot;https://mrthanlon.github.io/array-field/&quot;&gt;预览1&lt;/a&gt;/&lt;a href=&quot;https://codepen.io/mrthanlon/pen/KKXYVXN&quot;&gt;预览2&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;引&quot;&gt;&lt;a href=&quot;#引&quot; class=&quot;headerlink&quot; title=&quot;引&quot;&gt;&lt;/a&gt;引&lt;/h1&gt;&lt;p&gt;之前做了一个二维的点源阵仿真，还是挺简单的，D3.js直接画就完事了，但是这远远不够，工程上更多会考虑三维的情况。之前看了闫令琪老师的GAMES101和GAMES202，想着能不能趁着寒假在家用webgl做一个三维版本的。&lt;/p&gt;</summary>
    
    
    
    <category term="Web" scheme="https://blog.ch34k.xyz/categories/Web/"/>
    
    <category term="WebGL" scheme="https://blog.ch34k.xyz/categories/Web/WebGL/"/>
    
    
    <category term="Web" scheme="https://blog.ch34k.xyz/tags/Web/"/>
    
    <category term="WebGL" scheme="https://blog.ch34k.xyz/tags/WebGL/"/>
    
  </entry>
  
  <entry>
    <title>交叉编译wxWidgets应用</title>
    <link href="https://blog.ch34k.xyz/2021/11/01/%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91wxWidgets%E5%BA%94%E7%94%A8/"/>
    <id>https://blog.ch34k.xyz/2021/11/01/%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91wxWidgets%E5%BA%94%E7%94%A8/</id>
    <published>2021-11-01T10:09:35.000Z</published>
    <updated>2021-11-01T11:20:17.920Z</updated>
    
    
    <summary type="html">&lt;h1 id=&quot;引&quot;&gt;&lt;a href=&quot;#引&quot; class=&quot;headerlink&quot; title=&quot;引&quot;&gt;&lt;/a&gt;引&lt;/h1&gt;&lt;p&gt;众所周知wxWidgets是一个跨平台的GUI库，支持Linux(GTK/X11)，Windows和macOS(cocoa)，与Qt不同的是，他足够轻量，不需要魔改C++语言本身（qmake说的就是你），而且它调用平台原生API实现GUI，而Qt在Windows上实际上是绘制的界面，所以我打算用wxWidgets来做毕设。&lt;/p&gt;
&lt;p&gt;众所周知Windows是现阶段的主流操作系统，而我用来写代码的电脑是mac，所以最终我可能仍然需要提供一个Windows版本的程序，但是我实在是不想在虚拟机上再折腾一套开发环境，所以就想着能不能直接在macOS或者Linux上编译出exe呢？答案是可以的，那就是mingw。&lt;/p&gt;</summary>
    
    
    
    <category term="GUI" scheme="https://blog.ch34k.xyz/categories/GUI/"/>
    
    <category term="wxWidgets" scheme="https://blog.ch34k.xyz/categories/GUI/wxWidgets/"/>
    
    
    <category term="GUI" scheme="https://blog.ch34k.xyz/tags/GUI/"/>
    
    <category term="C++" scheme="https://blog.ch34k.xyz/tags/C/"/>
    
    <category term="交叉编译" scheme="https://blog.ch34k.xyz/tags/%E4%BA%A4%E5%8F%89%E7%BC%96%E8%AF%91/"/>
    
  </entry>
  
  <entry>
    <title>从0开始用C写一个后端框架</title>
    <link href="https://blog.ch34k.xyz/2021/09/21/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E7%94%A8C%E5%86%99%E4%B8%80%E4%B8%AA%E5%90%8E%E7%AB%AF%E6%A1%86%E6%9E%B6/"/>
    <id>https://blog.ch34k.xyz/2021/09/21/%E4%BB%8E0%E5%BC%80%E5%A7%8B%E7%94%A8C%E5%86%99%E4%B8%80%E4%B8%AA%E5%90%8E%E7%AB%AF%E6%A1%86%E6%9E%B6/</id>
    <published>2021-09-21T04:51:05.000Z</published>
    <updated>2021-10-03T12:39:46.134Z</updated>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/MrThanlon/libhttp-ev&quot;&gt;项目地址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.techempower.com/benchmarks/&quot;&gt;后端框架跑分&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;引&quot;&gt;&lt;a href=&quot;#引&quot; class=&quot;headerlink&quot; title=&quot;引&quot;&gt;&lt;/a&gt;引&lt;/h2&gt;&lt;p&gt;Go有Gin，Java有Tomcat/Spring，Python有Django，PHP本身就是为后端而生，Node.js有http模块，而C/C++……有nginx(?)! 但是众所周知，nginx插件并不好写，而且nginx还要配置文件，实际上也没多少人用nginx插件来写Web后端。&lt;/p&gt;
&lt;p&gt;所以我决定来做这件事，我对这个框架的目标是&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;高性能，既然是用C写，性能一定是优先地位，争取暴打nginx&lt;/li&gt;
&lt;li&gt;易用，类似于FaaS的开发和使用体验，如果还能有一个开发用的cli就更好了&lt;/li&gt;
&lt;li&gt;灵活，低耦合，可插拔，高度自定义&lt;/li&gt;
&lt;li&gt;轻量，少依赖&lt;/li&gt;
&lt;li&gt;跨平台，至少支持Linux和macOS&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Web" scheme="https://blog.ch34k.xyz/categories/Web/"/>
    
    <category term="Backend" scheme="https://blog.ch34k.xyz/categories/Web/Backend/"/>
    
    
    <category term="Web" scheme="https://blog.ch34k.xyz/tags/Web/"/>
    
    <category term="Backend" scheme="https://blog.ch34k.xyz/tags/Backend/"/>
    
  </entry>
  
  <entry>
    <title>用C语言写堆</title>
    <link href="https://blog.ch34k.xyz/2021/08/23/%E7%94%A8C%E8%AF%AD%E8%A8%80%E5%86%99%E5%A0%86/"/>
    <id>https://blog.ch34k.xyz/2021/08/23/%E7%94%A8C%E8%AF%AD%E8%A8%80%E5%86%99%E5%A0%86/</id>
    <published>2021-08-23T14:05:17.000Z</published>
    <updated>2021-08-23T14:18:18.082Z</updated>
    
    
    <summary type="html">&lt;p&gt;也就是优先队列，我们知道STL中提供了一个好用的优先队列&lt;code&gt;priority_queue&amp;lt;T&amp;gt;&lt;/code&gt;，C语言中起码有不少库（比如&lt;code&gt;librock&lt;/code&gt;）提供了这玩意，所以写这玩意纯属造无意义的轮子。但是我写这玩意主要是因为最近在面试，至少遇到了两次让手写一个堆（不过当时都没写出来，毕竟不会真的有人要手写STL提供的算法和数据结构吧？不会吧？不会吧？），闲着也是闲着，不如锻炼一下，堆还是很好写的。&lt;/p&gt;
&lt;p&gt;我写的这个版本用&lt;code&gt;void*&lt;/code&gt;模拟泛型，同时能自动扩容，但是缺点也很多，就我自己的感觉是时间复杂度的常数肯定很大，虽然是$O(\log_2 n)$​​​​​，但是有大量的判断，而且插入位置也没有优化，只写了个简单的测试例，总之不推荐在生产环境用（STL不香吗？）。&lt;/p&gt;</summary>
    
    
    
    <category term="数据结构" scheme="https://blog.ch34k.xyz/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    <category term="堆" scheme="https://blog.ch34k.xyz/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%A0%86/"/>
    
    
    <category term="数据结构" scheme="https://blog.ch34k.xyz/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    <category term="堆" scheme="https://blog.ch34k.xyz/tags/%E5%A0%86/"/>
    
  </entry>
  
  <entry>
    <title>关于我把api.js封装成了node module这件事</title>
    <link href="https://blog.ch34k.xyz/2021/06/21/%E5%85%B3%E4%BA%8E%E6%88%91%E6%8A%8Aapi-js%E5%B0%81%E8%A3%85%E6%88%90%E4%BA%86node-module%E8%BF%99%E4%BB%B6%E4%BA%8B/"/>
    <id>https://blog.ch34k.xyz/2021/06/21/%E5%85%B3%E4%BA%8E%E6%88%91%E6%8A%8Aapi-js%E5%B0%81%E8%A3%85%E6%88%90%E4%BA%86node-module%E8%BF%99%E4%BB%B6%E4%BA%8B/</id>
    <published>2021-06-21T08:52:42.000Z</published>
    <updated>2021-08-23T14:15:37.413Z</updated>
    
    
      
      
        
        
    <summary type="html"></summary>
        
      
    
    
    
    <category term="Web" scheme="https://blog.ch34k.xyz/categories/Web/"/>
    
    <category term="JavaScript" scheme="https://blog.ch34k.xyz/categories/Web/JavaScript/"/>
    
    <category term="Proxy" scheme="https://blog.ch34k.xyz/categories/Web/JavaScript/Proxy/"/>
    
    
    <category term="JavaScript" scheme="https://blog.ch34k.xyz/tags/JavaScript/"/>
    
    <category term="Web" scheme="https://blog.ch34k.xyz/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>一个好用的字典树模板(C++)</title>
    <link href="https://blog.ch34k.xyz/2021/06/21/%E4%B8%80%E4%B8%AA%E5%A5%BD%E7%94%A8%E7%9A%84%E5%AD%97%E5%85%B8%E6%A0%91%E6%A8%A1%E6%9D%BF-C/"/>
    <id>https://blog.ch34k.xyz/2021/06/21/%E4%B8%80%E4%B8%AA%E5%A5%BD%E7%94%A8%E7%9A%84%E5%AD%97%E5%85%B8%E6%A0%91%E6%A8%A1%E6%9D%BF-C/</id>
    <published>2021-06-21T08:46:13.000Z</published>
    <updated>2021-06-21T08:48:55.333Z</updated>
    
    
      
      
        
        
    <summary type="html"></summary>
        
      
    
    
    
    <category term="数据结构" scheme="https://blog.ch34k.xyz/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    <category term="字典树" scheme="https://blog.ch34k.xyz/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E5%AD%97%E5%85%B8%E6%A0%91/"/>
    
    
    <category term="刷题" scheme="https://blog.ch34k.xyz/tags/%E5%88%B7%E9%A2%98/"/>
    
    <category term="ICPC" scheme="https://blog.ch34k.xyz/tags/ICPC/"/>
    
    <category term="数据结构" scheme="https://blog.ch34k.xyz/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    <category term="字典树" scheme="https://blog.ch34k.xyz/tags/%E5%AD%97%E5%85%B8%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>那些CSS动画</title>
    <link href="https://blog.ch34k.xyz/2021/03/20/%E9%82%A3%E4%BA%9BCSS%E5%8A%A8%E7%94%BB/"/>
    <id>https://blog.ch34k.xyz/2021/03/20/%E9%82%A3%E4%BA%9BCSS%E5%8A%A8%E7%94%BB/</id>
    <published>2021-03-20T08:46:52.000Z</published>
    <updated>2021-03-22T12:09:03.454Z</updated>
    
    
    <summary type="html">&lt;p&gt;众所周知，CSS可以实现很多矢量动画。&lt;/p&gt;
&lt;p&gt;比如这个菜单按钮&lt;/p&gt;
&lt;p class=&quot;codepen&quot; data-height=&quot;303&quot; data-theme-id=&quot;dark&quot; data-default-tab=&quot;css,result&quot; data-user=&quot;mrthanlon&quot; data-slug-hash=&quot;PobMbLv&quot; style=&quot;height: 303px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;&quot; data-pen-title=&quot;Menu button&quot;&gt;
  &lt;span&gt;See the Pen &lt;a href=&quot;https://codepen.io/mrthanlon/pen/PobMbLv&quot;&gt;
  Menu button&lt;/a&gt; by hzy (&lt;a href=&quot;https://codepen.io/mrthanlon&quot;&gt;@mrthanlon&lt;/a&gt;)
  on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/span&gt;
&lt;/p&gt;
&lt;script async src=&quot;https://cpwebassets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;</summary>
    
    
    
    
    <category term="动画" scheme="https://blog.ch34k.xyz/tags/%E5%8A%A8%E7%94%BB/"/>
    
    <category term="CSS" scheme="https://blog.ch34k.xyz/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>微软2021春招实习生笔试</title>
    <link href="https://blog.ch34k.xyz/2021/03/06/%E5%BE%AE%E8%BD%AF2021%E6%98%A5%E6%8B%9B%E5%AE%9E%E4%B9%A0%E7%94%9F%E7%AC%94%E8%AF%95/"/>
    <id>https://blog.ch34k.xyz/2021/03/06/%E5%BE%AE%E8%BD%AF2021%E6%98%A5%E6%8B%9B%E5%AE%9E%E4%B9%A0%E7%94%9F%E7%AC%94%E8%AF%95/</id>
    <published>2021-03-06T08:43:40.000Z</published>
    <updated>2021-03-22T12:08:44.175Z</updated>
    
    
    <summary type="html">&lt;p&gt;两个小时，三道题，第二题实在是粗心了，正确率应该能提到100%的，忘记对结果进行特判。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;1FB3584CBBD8AB424975EBD88F150712.jpg&quot; alt=&quot;结果&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;A题&quot;&gt;&lt;a href=&quot;#A题&quot; class=&quot;headerlink&quot; title=&quot;A题&quot;&gt;&lt;/a&gt;A题&lt;/h2&gt;&lt;p&gt;第一题可以选择中文或者英文题面，不过题目好像不太一样，我做的中文题。&lt;/p&gt;</summary>
    
    
    
    <category term="招聘" scheme="https://blog.ch34k.xyz/categories/%E6%8B%9B%E8%81%98/"/>
    
    <category term="微软" scheme="https://blog.ch34k.xyz/categories/%E6%8B%9B%E8%81%98/%E5%BE%AE%E8%BD%AF/"/>
    
    
    <category term="刷题" scheme="https://blog.ch34k.xyz/tags/%E5%88%B7%E9%A2%98/"/>
    
    <category term="微软" scheme="https://blog.ch34k.xyz/tags/%E5%BE%AE%E8%BD%AF/"/>
    
  </entry>
  
  <entry>
    <title>在树莓派上使用SATA设备(ASM1062/ASM1061)</title>
    <link href="https://blog.ch34k.xyz/2021/01/30/%E5%9C%A8%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%8A%E4%BD%BF%E7%94%A8SATA%E8%AE%BE%E5%A4%87-ASM1062-ASM1061/"/>
    <id>https://blog.ch34k.xyz/2021/01/30/%E5%9C%A8%E6%A0%91%E8%8E%93%E6%B4%BE%E4%B8%8A%E4%BD%BF%E7%94%A8SATA%E8%AE%BE%E5%A4%87-ASM1062-ASM1061/</id>
    <published>2021-01-30T12:33:50.000Z</published>
    <updated>2021-03-22T12:09:20.669Z</updated>
    
    
    <summary type="html">&lt;p&gt;众所周知，树莓派4使用的BCM2711拥有一个千兆以太网口，以及一条PCIe2.0 1x，也就是说如果我们把PCIe转接到SATA，就可以用树莓派当NAS了，岂不美哉？&lt;/p&gt;</summary>
    
    
    
    <category term="嵌入式开发" scheme="https://blog.ch34k.xyz/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/"/>
    
    <category term="树莓派" scheme="https://blog.ch34k.xyz/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
    
    <category term="GNU/Linux" scheme="https://blog.ch34k.xyz/tags/GNU-Linux/"/>
    
    <category term="树莓派" scheme="https://blog.ch34k.xyz/tags/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
    
  </entry>
  
  <entry>
    <title>记一次LVM误操作引发的事故</title>
    <link href="https://blog.ch34k.xyz/2021/01/08/%E8%AE%B0%E4%B8%80%E6%AC%A1LVM%E8%AF%AF%E6%93%8D%E4%BD%9C%E5%BC%95%E5%8F%91%E7%9A%84%E4%BA%8B%E6%95%85/"/>
    <id>https://blog.ch34k.xyz/2021/01/08/%E8%AE%B0%E4%B8%80%E6%AC%A1LVM%E8%AF%AF%E6%93%8D%E4%BD%9C%E5%BC%95%E5%8F%91%E7%9A%84%E4%BA%8B%E6%95%85/</id>
    <published>2021-01-08T13:42:27.000Z</published>
    <updated>2021-03-22T12:10:24.811Z</updated>
    
    
    <summary type="html">&lt;p&gt;总之是闯了大祸，好在最后数据都没事。主要问题是我对LVM操作不熟练，以及对文件系统和磁盘没有比较清晰的认识，具体来说就是我以为&lt;del&gt;LVM在进行lvresize时会自动处理文件系统&lt;/del&gt;，这当然是错误的，&lt;strong&gt;文件系统应该使用resize2fs命令来调整，LVM管理的是块设备&lt;/strong&gt;，不会处理文件系统上的问题。&lt;/p&gt;</summary>
    
    
    
    
    <category term="GNU/Linux" scheme="https://blog.ch34k.xyz/tags/GNU-Linux/"/>
    
    <category term="小记" scheme="https://blog.ch34k.xyz/tags/%E5%B0%8F%E8%AE%B0/"/>
    
    <category term="LVM" scheme="https://blog.ch34k.xyz/tags/LVM/"/>
    
  </entry>
  
  <entry>
    <title>NRF24L01 调试笔记</title>
    <link href="https://blog.ch34k.xyz/2020/07/30/NRF24L01-%E8%B0%83%E8%AF%95%E7%AC%94%E8%AE%B0/"/>
    <id>https://blog.ch34k.xyz/2020/07/30/NRF24L01-%E8%B0%83%E8%AF%95%E7%AC%94%E8%AE%B0/</id>
    <published>2020-07-30T03:37:08.000Z</published>
    <updated>2021-03-22T12:11:25.027Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;引&quot;&gt;&lt;a href=&quot;#引&quot; class=&quot;headerlink&quot; title=&quot;引&quot;&gt;&lt;/a&gt;引&lt;/h2&gt;&lt;p&gt;前几天想要做一个开源航模接收机，于是去淘宝看了下无线模块，以前有了解过NRF24L01，于是就下单了三片，一片才8块钱，真的划算。&lt;/p&gt;</summary>
    
    
    
    <category term="嵌入式开发" scheme="https://blog.ch34k.xyz/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/"/>
    
    <category term="NRF24L01" scheme="https://blog.ch34k.xyz/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/NRF24L01/"/>
    
    
    <category term="嵌入式开发" scheme="https://blog.ch34k.xyz/tags/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/"/>
    
    <category term="SPI" scheme="https://blog.ch34k.xyz/tags/SPI/"/>
    
    <category term="NRF24L01" scheme="https://blog.ch34k.xyz/tags/NRF24L01/"/>
    
  </entry>
  
  <entry>
    <title>如何优雅地开发STM32(Clion,CubeMX,ST-Link)</title>
    <link href="https://blog.ch34k.xyz/2020/07/25/%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E5%9C%B0%E5%BC%80%E5%8F%91STM32-Clion-CubeMX-ST-Link/"/>
    <id>https://blog.ch34k.xyz/2020/07/25/%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E5%9C%B0%E5%BC%80%E5%8F%91STM32-Clion-CubeMX-ST-Link/</id>
    <published>2020-07-25T02:30:24.000Z</published>
    <updated>2021-03-22T12:12:02.523Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;引&quot;&gt;&lt;a href=&quot;#引&quot; class=&quot;headerlink&quot; title=&quot;引&quot;&gt;&lt;/a&gt;引&lt;/h2&gt;&lt;p&gt;与时髦的应用层码农不同，我们这些嵌入式码农在写单片机程序的时候大多使用上古的Keil，不得不说，Keil确实好用，编译、调试都可以一键完成，但只提供Windows版本，而且界面还停留在上个世纪，也没有自动补全等现代IDE的功能。&lt;/p&gt;
&lt;p&gt;自从前段时间换了MacBook Pro之后我就基本上用它来干活了，虚拟机跑Keil实在是得不偿失，更换嵌入式开发环境在所难免。&lt;/p&gt;</summary>
    
    
    
    <category term="嵌入式开发" scheme="https://blog.ch34k.xyz/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/"/>
    
    <category term="STM32" scheme="https://blog.ch34k.xyz/categories/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/STM32/"/>
    
    
    <category term="嵌入式开发" scheme="https://blog.ch34k.xyz/tags/%E5%B5%8C%E5%85%A5%E5%BC%8F%E5%BC%80%E5%8F%91/"/>
    
    <category term="STM32" scheme="https://blog.ch34k.xyz/tags/STM32/"/>
    
  </entry>
  
  <entry>
    <title>UESTC 2503</title>
    <link href="https://blog.ch34k.xyz/2020/07/08/UESTC-2503/"/>
    <id>https://blog.ch34k.xyz/2020/07/08/UESTC-2503/</id>
    <published>2020-07-08T08:10:38.000Z</published>
    <updated>2021-03-22T12:12:40.998Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;Alice 和 Bob 在做游戏。有一个长度为$n$的正整数序列，Alice 先手，两人轮流操作。Alice 需要删掉一个非空连续子段，子段和为奇数；Bob 需要删掉一个非空连续子段，子段和为偶数。删除子段后左右两段拼接起来形成新的序列。不能操作的人输。如果两个人都足够聪明，那么谁会获胜？&lt;/p&gt;</summary>
    
    
    
    <category term="ICPC训练" scheme="https://blog.ch34k.xyz/categories/ICPC%E8%AE%AD%E7%BB%83/"/>
    
    <category term="数学与几何" scheme="https://blog.ch34k.xyz/categories/ICPC%E8%AE%AD%E7%BB%83/%E6%95%B0%E5%AD%A6%E4%B8%8E%E5%87%A0%E4%BD%95/"/>
    
    <category term="博弈论" scheme="https://blog.ch34k.xyz/categories/ICPC%E8%AE%AD%E7%BB%83/%E6%95%B0%E5%AD%A6%E4%B8%8E%E5%87%A0%E4%BD%95/%E5%8D%9A%E5%BC%88%E8%AE%BA/"/>
    
    
    <category term="刷题" scheme="https://blog.ch34k.xyz/tags/%E5%88%B7%E9%A2%98/"/>
    
    <category term="博弈论" scheme="https://blog.ch34k.xyz/tags/%E5%8D%9A%E5%BC%88%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>如何优雅地调用web接口(api.js)</title>
    <link href="https://blog.ch34k.xyz/2020/06/22/%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E5%9C%B0%E8%B0%83%E7%94%A8web%E6%8E%A5%E5%8F%A3-api-js/"/>
    <id>https://blog.ch34k.xyz/2020/06/22/%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E5%9C%B0%E8%B0%83%E7%94%A8web%E6%8E%A5%E5%8F%A3-api-js/</id>
    <published>2020-06-22T07:27:05.000Z</published>
    <updated>2021-06-21T08:50:04.295Z</updated>
    
    
    <summary type="html">&lt;p&gt;在写前端项目的时候总免不了要调用后端提供的接口，比如POST &lt;code&gt;/user/login&lt;/code&gt;，比较传统的方法就是使用XHR。不过，ES6引入了Promise，ES7引入了async/await，使得我们可以更优雅地完成异步操作，于是&lt;a href=&quot;https://github.com/axios/axios&quot;&gt;axios&lt;/a&gt;隆重登场（其实我个人并没有用过axios）。&lt;/p&gt;</summary>
    
    
    
    <category term="Web" scheme="https://blog.ch34k.xyz/categories/Web/"/>
    
    <category term="JavaScript" scheme="https://blog.ch34k.xyz/categories/Web/JavaScript/"/>
    
    <category term="Proxy" scheme="https://blog.ch34k.xyz/categories/Web/JavaScript/Proxy/"/>
    
    
    <category term="JavaScript" scheme="https://blog.ch34k.xyz/tags/JavaScript/"/>
    
    <category term="Web" scheme="https://blog.ch34k.xyz/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>UESTC 2459</title>
    <link href="https://blog.ch34k.xyz/2020/06/20/UESTC-2459/"/>
    <id>https://blog.ch34k.xyz/2020/06/20/UESTC-2459/</id>
    <published>2020-06-20T03:00:59.000Z</published>
    <updated>2021-03-22T12:13:43.199Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;给两段字符串$A$和$B$，输出$A$中所有出现$B$的位置。&lt;/p&gt;
&lt;h2 id=&quot;题解&quot;&gt;&lt;a href=&quot;#题解&quot; class=&quot;headerlink&quot; title=&quot;题解&quot;&gt;&lt;/a&gt;题解&lt;/h2&gt;&lt;p&gt;这题是老KMP了，不过还是说下怎么做吧&lt;del&gt;不然太水了&lt;/del&gt;。&lt;/p&gt;</summary>
    
    
    
    <category term="ICPC训练" scheme="https://blog.ch34k.xyz/categories/ICPC%E8%AE%AD%E7%BB%83/"/>
    
    <category term="字符串与搜索" scheme="https://blog.ch34k.xyz/categories/ICPC%E8%AE%AD%E7%BB%83/%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%8E%E6%90%9C%E7%B4%A2/"/>
    
    <category term="KMP" scheme="https://blog.ch34k.xyz/categories/ICPC%E8%AE%AD%E7%BB%83/%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%8E%E6%90%9C%E7%B4%A2/KMP/"/>
    
    
    <category term="刷题" scheme="https://blog.ch34k.xyz/tags/%E5%88%B7%E9%A2%98/"/>
    
    <category term="KMP" scheme="https://blog.ch34k.xyz/tags/KMP/"/>
    
    <category term="字符串" scheme="https://blog.ch34k.xyz/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    
  </entry>
  
</feed>
